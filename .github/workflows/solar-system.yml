name:  Solar System Workflow

on:
    workflow_dispatch:
    push:
      branches: 
      - main
      - feature/*

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}} 
jobs:
    unit-testing:
        name: Unit Testing
        strategy:
          matrix:
            nodejs_version: [18, 19]
            os: [ubuntu-latest]
            exclude:
            - nodejs_version: [19, 20]
              os: macos-latest
        runs-on: ${{matrix.os}}
        steps:
        - name: Checkout Repo
          uses: actions/checkout@v4
        
        - name: Setup Node JS Version - ${{matrix.nodejs_version}}
          uses: actions/Setup-Node@v3
          with:
            node-version: ${{matrix.nodejs_version}}


        - name: Cache NPM Dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{runner.os}}-node-modules-${{ hashFiles('package-lock.json')}}   
        - name: Install dependencies
          run: npm install
        - name: Unit Testing
          run: npm test

        - name: Archive Test Result
          uses: actions/upload-artifact@v3
          with:
            name: Mocha-Test-Result
            path: test-results.xml

    code-coverage:
      name: Code Coverage
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      
      - name: Setup NodeJS v18
        uses: actions/Setup-Node@v3
        with:
          node-version: 18
      
      - name: Cache NPM Dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{hashFiles('package-lock.json')}}
      
      - name: Install Dependencies
        run: npm install
      
      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Result
        uses: actions/upload-artifact@v3
        if:
          always ()
        with:
          name: Code-Coverage-Result
          path: coverage
          retention-days: 5 

    docker:
      name: Containerization
      needs: [unit-testing, code-coverage]
      runs-on: ubuntu-latest
      steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Dockerhub login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{vars.DCKR_USER}}
          password: ${{secrets.DCKR_PASS}}

      - name: Docker Build for Testing 
        uses: docker/Build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{vars.DCKR_USER}}/solar-system:${{github.sha}}

      - name: Docker Image Testing
        run:  |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{vars.DCKR_USER}}/solar-system:${{ github.sha }}
        
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo testing Image URL using wget
          wget -q -O - "$IP:3000/live" | grep live